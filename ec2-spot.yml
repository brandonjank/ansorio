---
- name: Create AWS environment and instance
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import factorio configuration overrides
      include_vars: factorio-config.yml

    - name: Create EC2 keypair from local ssh key
      ec2_key:
        name: factorio
        key_material: "{{ item }}"
        region: "{{ region }}"
      with_file: ~/.ssh/id_rsa.pub

    - name: Create AWS VPC
      ec2_vpc_net:
        name: Factorio
        state: present
        region: "{{ region }}"
        cidr_block: 10.10.220.0/24
        tags:
          Environment: Factorio
      register: factorio_vpc

    - name: Show factorio_vpc object
      debug:
        msg: "{{ factorio_vpc }}"
        verbosity: 2

    - name: Create AWS VPC Subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ factorio_vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone }}"
        cidr: 10.10.220.0/24
        resource_tags:
          Environment: Factorio
      register: factorio_subnet

    - name: Show factorio_subnet object
      debug:
        msg: "{{ factorio_subnet }}"
        verbosity: 2

    - name: Create AWS VPC Gateway
      ec2_vpc_igw:
        vpc_id: "{{ factorio_vpc.vpc.id }}"
        state: present
        region: "{{ region }}"
      register: factorio_gateway

    - name: Show factorio_gateway object
      debug:
        msg: "{{ factorio_gateway }}"
        verbosity: 2

    - name: Create AWS VPC Route Table
      ec2_vpc_route_table:
        vpc_id: "{{ factorio_vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: factorio
        subnets:
          - "{{ factorio_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ factorio_gateway.gateway_id }}"

    - name: Register local public IP address
      ipify_facts:
        api_url: http://api.ipify.org
      when: local_ip is undefined

    - name: Set local_ip fact from ipify
      set_fact:
        local_ip: "{{ ipify_public_ip }}"
      when: local_ip is undefined

    - name: Create security group
      ec2_group:
        name: factorio
        description: factorio
        vpc_id: "{{ factorio_vpc.vpc.id }}"
        region: "{{ region }}"
        rules:
          - proto: udp
            from_port: 34197
            to_port: 34197
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ local_ip }}/32"
      register: factorio_group

    - name: Show factorio_group object
      debug:
        msg: "{{ factorio_group }}"
        verbosity: 2

    - name: Create S3 bucket
      s3_bucket:
        name: "{{ factorio_s3_bucket }}"
        region: "{{ region }}"

    - name: Create AWS Factorio IAM role
      iam:
        iam_type: role
        name: factorio
        state: present

    - name: Show s3 bucket policy
      debug:
        msg: " {{ lookup('template', 'factorio_s3_bucket_policy.json.j2', convert_data=False) | string }} "
        verbosity: 2

    - name: Create policy for Factorio IAM role
      iam_policy:
        iam_type: role
        iam_name: factorio
        policy_json: " {{ lookup('template', 'factorio_s3_bucket_policy.json.j2', convert_data=False) | string }} "
        state: present
        policy_name: factorio

    - name: Request spot instance
      ec2:
        spot_price: "{{ spot_price }}"
        spot_wait_timeout: 600
        keypair: factorio
        instance_type: "{{ instance_type }}"
        image: ami-84be98e1 #ami-a025aeb6 # Ubuntu 17.04 64-bit HVM
        wait: yes
        vpc_subnet_id: "{{ factorio_subnet.subnet.id }}"
        assign_public_ip: yes
        region: "{{ region }}"
        exact_count: 1
        zone: "{{ zone }}"
        group: factorio
        count_tag:
          Name: Factorio
        instance_tags:
          Name: Factorio
        instance_profile_name: factorio
        user_data: |
          #!/bin/bash
          apt-get update
          apt-get install -y python-minimal
          apt-get install -y awscli
          apt-get install -y inotify-tools
      register: ec2

    - name: Show ec2 object
      debug:
        msg: "{{ ec2 }}"
        verbosity: 2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
      with_items: "{{ ec2.tagged_instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 10
        timeout: 320
        state: started
      with_items: "{{ ec2.tagged_instances }}"

- name: Configure factorio instance(s)
  hosts: all
  become: True
  gather_facts: True
  remote_user: ubuntu
  pre_tasks:
    - name: Import factorio configuration overrides
      include_vars: factorio-config.yml

    - name: Format ephemeral disks if specified
      filesystem:
        fstype: ext2
        dev: "{{ ephemeral_device }}"
      when: ephemeral_device is defined
  roles:
    - factorio
  post_tasks:
    - name: Print IP address(es) of configured instance(s)
      debug:
        msg: "^^ look above for IP"
